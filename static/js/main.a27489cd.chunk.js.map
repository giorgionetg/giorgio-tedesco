{"version":3,"sources":["logo.svg","components/WelcomePage.js","components/InfoPage.js","components/MemoGamePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WelcomePage","react_default","a","createElement","Component","InfoPage","card","Welcome","React","GamePlay","FAQ","Manager","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","window","localStorage","getItem","aStorage","allGames","key","push","console","log","games","state","e","setState","prevState","concat","toConsumableArray","name","description","wordlist","from","to","obj","stringify","setItem","element","encodeURIComponent","document","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","i","_this2","removeItem","filter","toDel","id","data","target","value","wkey","nWordlist","_this3","buttons","icon","onClick","createGame","map","game","flex","display","marginBottom","flexChildLx","flexGrow","paddingRight","flexChildRx","paddingLeft","flexChildMx","buttonGroup","style","float","saveGame","exportJson","fileInput","onInputChange","importJson","deleteGame","inputGroup","placeholder","onChange","updateGameName","textArea","fill","updateGameDescription","createAWord","clearData","word","updateWordFrom","updateWordTo","deletePair","MemoGamePage","_this4","arrpath","location","pathname","split","length","selectedTab","tabId","_this5","tabs","animate","handleTabChange","selectedTabId","tab","title","panel","MemoGamePage_Welcome","MemoGamePage_GamePlay","MemoGamePage_Manager","MemoGamePage_FAQ","App","BrowserRouter","basename","navbar","Group","align","Heading","Link","Divider","leftIcon","className","text","menu","menuItem","Route","path","exact","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a27489cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass WelcomePage extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>WelcomePage</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { Component } from 'react';\r\n\r\nimport {Card, Elevation} from \"@blueprintjs/core\";\r\n\r\nclass InfoPage extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Card>\r\n          <h1>InfoPage</h1>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default InfoPage;\r\n","import React, { Component } from 'react';\r\n\r\nimport {Card, Elevation, ButtonGroup, Button, AnchorButton, Tab, Tabs, InputGroup, FileInput, NumericInput, Icon, TextArea } from \"@blueprintjs/core\";\r\n//import {withRouter} from 'react-router-dom';\r\n\r\n//const getThePath = withRouter(props => <MemoGamePage {...props}/>);\r\n\r\nclass Welcome extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Welcome to Memo Game</h2>\r\n        <p>The main reason I made this game it is my difficulty learn and memorize the language's words.</p>\r\n        <p>A lot of years ago I made the same kind of game to a person I really care about her.</p>\r\n        <p>So I start to create this little memory game to improve recognize of words in a simple way, fully customizable.</p>\r\n        <h3>How it works:</h3>\r\n        <ul>\r\n          <li>At first, you can create one or more games via Settings Tab.</li>\r\n          <li>For each Game you can use an Enviroment you prefer.</li>\r\n          <li>To play the Game you have also to fill up your game with a Words' List (you may update when ever you want at anytime).</li>\r\n        </ul>\r\n        <h3>About the Author</h3>\r\n        <p><b>Giorgio Tedesco</b> | I work on <b>web development/3D graphic</b> and I love to mix them.</p>\r\n        <h3>Licence</h3>\r\n        <p>FREE TO USE, TIPPABLE with XRP (COIL AND TIPBOT)</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass GamePlay extends React.Component {\r\n  render() {\r\n    return <h1>Hello, PLAY THE GAME</h1>;\r\n  }\r\n}\r\n\r\nclass FAQ extends React.Component {\r\n  render() {\r\n    return <h1>FAQ</h1>;\r\n  }\r\n}\r\n\r\nclass Manager extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let aGame = JSON.parse(window.localStorage.getItem('test'));\r\n    //console.log(aGame);\r\n\r\n    let aStorage = window.localStorage;\r\n    let allKeys = [];\r\n    let allGames = [];\r\n    for (let key in aStorage) {\r\n      if (key != 'clear' && key != 'removeItem' && key != 'setItem' && key != 'getItem' && key != 'key' && key != 'length') {\r\n        allGames.push(JSON.parse(aStorage.getItem(key)));\r\n      }\r\n    }\r\n    console.log(this.props.games);\r\n    this.state = {\r\n      //games: [...this.props.games, allGames]\r\n      games: allGames\r\n    }\r\n  }\r\n\r\n  createGame(e) {\r\n    this.setState(prevState => ({\r\n      games: [...prevState.games, {\r\n        name: '',\r\n        description: '',\r\n        wordlist: [\r\n          {from: 'Domenica', to: 'Domingo'},\r\n          {from: 'Janeiro', to: 'Gennaio'},\r\n          {from: 'Olà, tudo bem?', to: 'Sim, tudo bom, e vocé?'},\r\n          {from: 'Tudo. Entao, de onde vocé é?', to: 'Eu moro na Italia'}\r\n        ]\r\n      }]\r\n    }));\r\n  }\r\n\r\n  saveGame(e) {\r\n\r\n    let obj = JSON.stringify(this.state.games[e]);\r\n    window.localStorage.setItem('game:' + this.state.games[e].name, obj);\r\n  }\r\n\r\n  importJson(e, key) {\r\n\r\n  }\r\n\r\n  exportJson(e, key) {\r\n    let obj = this.state.games[key];\r\n    var data = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj));\r\n\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([JSON.stringify(obj)], {type: 'text/json'});\r\n    element.href = URL.createObjectURL(file);\r\n    //element.href = data;\r\n    element.download = this.state.games[key].name + \".json\";\r\n    document.body.appendChild(element); // Required for this to work in FireFox\r\n    element.click();\r\n\r\n  }\r\n\r\n  deleteGame (i) {\r\n    window.localStorage.removeItem('game:' + this.state.games[i].name);\r\n    this.setState(prevState => ({\r\n      games: this.state.games.filter((toDel, id) => {\r\n        return id !== i\r\n      })\r\n    }));\r\n  }\r\n\r\n  updateGameName(e, key) {\r\n    let data = e.target.value;\r\n    this.setState(prevState => {\r\n      prevState.games[key].name = data;\r\n      return {games: prevState.games};\r\n    });\r\n  }\r\n\r\n  updateGameDescription(e, key) {\r\n    let data = e.target.value;\r\n    this.setState(prevState => {\r\n      prevState.games[key].description = data;\r\n      return {games: prevState.games};\r\n    });\r\n  }\r\n\r\n  createAWord(e, key) {\r\n    let data = e.target.value;\r\n    this.setState(prevState => {\r\n      //prevState.games[key].wordlist.push({from: '', to: ''})\r\n      //return {games: prevState.games};\r\n      prevState.games[key].wordlist = [...prevState.games[key].wordlist, {from: '', to: ''}];\r\n      return {games: prevState.games}\r\n\r\n      //return {games: {wordlist: [...prevState.games[key].wordlist, {from:'', to:''}]}};\r\n    });\r\n  }\r\n\r\n  clearData(e, key) {\r\n    this.setState(prevState => {\r\n      prevState.games[key].wordlist = [{from: '', to: ''}]\r\n      return {games: prevState.games};\r\n    });\r\n  }\r\n\r\n  updateWordFrom(e,key,wkey) {\r\n    let data = e.target.value;\r\n    this.setState(prevState => {\r\n      prevState.games[key].wordlist[wkey].from = data;\r\n      return {games:prevState.games}\r\n    });\r\n  }\r\n  updateWordTo(e,key,wkey) {\r\n    let data = e.target.value;\r\n    this.setState(prevState => {\r\n      prevState.games[key].wordlist[wkey].to = data;\r\n      return {games:prevState.games}\r\n    });\r\n  }\r\n\r\n  deletePair(e,key,wkey) {\r\n    this.setState(prevState => {\r\n      let nWordlist = prevState.games[key].wordlist.filter((obj, id) => {\r\n        return id !== wkey\r\n      });\r\n      prevState.games[key].wordlist = nWordlist;\r\n      return {games: prevState.games}\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Manage your Games</h2>\r\n\r\n        <Button icon=\"small-plus\" onClick={(e) => this.createGame(e)}>Create a Game!</Button>\r\n\r\n        {\r\n          this.state.games.map((game, key) => {\r\n            let flex = {\r\n              display: 'flex',\r\n              marginBottom: '5px'\r\n            }\r\n            let flexChildLx = {\r\n              flexGrow: '1',\r\n              paddingRight: '5px'\r\n            }\r\n            let flexChildRx = {\r\n              flexGrow: '1',\r\n              paddingLeft: '5px'\r\n            }\r\n            let flexChildMx = {\r\n              flexGrow: '1'\r\n            }\r\n            let fltR = {\r\n              float: 'right'\r\n            }\r\n          return(\r\n            <div>\r\n              <br />\r\n              <Card key={key}>\r\n                <h3>Game Settings <small>\r\n                  <ButtonGroup style={fltR}>\r\n                    <Button onClick={(e) => this.saveGame(key)} icon=\"floppy-disk\" />\r\n                    <AnchorButton onClick={(e) => this.exportJson(e, key)} icon=\"export\" />\r\n                    <FileInput icon=\"import\" onInputChange={(e) => this.importJson(e, key)} />\r\n                    <Button onClick={(e) => this.deleteGame(key)} icon=\"small-cross\" />\r\n                  </ButtonGroup></small></h3>\r\n                <InputGroup placeholder=\"Game Name\" onChange={(e) => this.updateGameName(e, key)} value={this.state.games[key].name} /><br />\r\n                <TextArea fill=\"true\" onChange={(e) => this.updateGameDescription(e, key)} value={this.state.games[key].description} /><br />\r\n                <h4>Words' List:</h4>\r\n                <p><i>Here you can set just a words pairs or a sentences pairs or like touch and go reply.</i></p>\r\n                <Button onClick={(e) => this.createAWord(e, key)}>Create a Word Pair!</Button> <Button onClick={(e) => this.clearData(e, key)}>Clear the words dataset!</Button><br /><br />\r\n\r\n                  {\r\n                    this.state.games[key].wordlist.map((word, wkey) => {\r\n                      return (\r\n                        <div key={wkey} style={flex}>\r\n                          <div style={flexChildLx}>\r\n                            <InputGroup placeholder=\"Your Language\" onChange={(e) => this.updateWordFrom(e, key, wkey)} value={word.from} />\r\n                          </div>\r\n                          <div style={flexChildMx}>\r\n                            <InputGroup placeholder=\"Language to learn\" onChange={(e) => this.updateWordTo(e, key, wkey)} value={word.to}/>\r\n                          </div>\r\n                          <div style={flexChildRx}>\r\n                            <Button icon=\"cross\" onClick={(e) => this.deletePair(e, key, wkey)} />\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n\r\n                {/*<Button icon=\"plus\" onClick={(e) => this.addAWord(e, key)}>Add a word</Button><br /><br />\r\n\r\n                <div style={flex}>\r\n                  <div style={flexChildLx}>\r\n                    <InputGroup placeholder=\"Your Language\"/>\r\n                  </div>\r\n                  <div style={flexChildMx}>\r\n                    <InputGroup placeholder=\"Language to learn\" />\r\n                  </div>\r\n                  <div style={flexChildRx}>\r\n                    <Button icon=\"cross\" />\r\n                  </div>\r\n                </div>\r\n                */}\r\n\r\n              </Card>\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n\r\n        {/*<InputGroup placeholder=\"Game Name\" /><br />\r\n        <NumericInput allowNumericCharactersOnly=\"true\" min=\"10\" max=\"30\" placeholder=\"How many words\"/>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass MemoGamePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let arrpath = this.props.location.pathname.split('/');\r\n    let location = arrpath[arrpath.length - 1];\r\n    this.state = {\r\n      selectedTab: location,\r\n      games: []\r\n    }\r\n  }\r\n\r\n  handleTabChange (tabId) {\r\n    //window.location.pathname = '/memo-game/' + tabId;\r\n    this.setState({\r\n      selectedTab: tabId\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let arrpath = this.props.location.pathname.split('/');\r\n    let location = arrpath[arrpath.length - 1];\r\n\r\n    /*if (location != this.state.selectedTab) {\r\n      this.handleTabChange(location);\r\n    }*/\r\n\r\n    if (this.state.games.length <= 0) {\r\n      let dis = \"disabled\";\r\n    } else {\r\n      let dis = null;\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Card>\r\n          <h1>Memo Game</h1>\r\n          <hr />\r\n\r\n          <Tabs animate=\"true\" onChange={(e) => this.handleTabChange(e)} selectedTabId={this.state.selectedTab}>\r\n            <Tab id=\"home\" title=\"Home\" panel={<Welcome name=\"Homepage Game\" />} />\r\n            <Tab id=\"play\"  title=\"Play\" panel={<GamePlay />} />\r\n            <Tab id=\"manager\" title=\"Manager\" panel={<Manager games={this.state.games}/>} />\r\n            <Tab id=\"faq\" title=\"FAQ\" panel={<FAQ />} />\r\n          </Tabs>\r\n          <br />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MemoGamePage;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport './App.css';\n\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport WelcomePage from \"./components/WelcomePage\";\nimport InfoPage from \"./components/InfoPage\";\nimport MemoGamePage from \"./components/MemoGamePage\";\n\nimport { Alignment, Card, Elevation, Button, Menu, MenuItem, Classes, H5, Navbar, NavbarDivider, NavbarGroup, NavbarHeading, InputGroup, Switch} from \"@blueprintjs/core\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/giorgio-tedesco\">\n        <div>\n          <Navbar>\n            <Navbar.Group align=\"left\">\n              <Navbar.Heading><Link to=\"/\">Easy Learn App</Link></Navbar.Heading>\n              <Navbar.Divider />\n              <InputGroup leftIcon=\"search\" />\n            </Navbar.Group>\n            <Navbar.Group align=\"right\">\n              <Button className=\"bp3-minimal\" icon=\"user\" text=\"Profile\" />\n              <Link to=\"/info\"><Button className=\"bp3-minimal\" icon=\"cog\" text=\"Settings\" /></Link>\n              <Navbar.Divider />\n              <Button className=\"bp3-minimal\" icon=\"log-out\" text=\"Exit\" />\n            </Navbar.Group>\n          </Navbar>\n\n\n\n          <div className=\"page-container\">\n            <div className=\"sidebar\">\n            <Menu>\n              <Link to=\"/memo-game/home\"><MenuItem text=\"Memo Game\" /></Link>\n              <MenuItem text=\"Vocabulary\" />\n              <MenuItem text=\"Notes\">\n                <MenuItem text=\"Add a Note\" />\n                <MenuItem text=\"Note Management\" />\n                <MenuItem text=\"Visual Map Note\" />\n              </MenuItem>\n            </Menu>\n            </div>\n            <div className=\"main-content\">\n              <Route path=\"/\" exact component={WelcomePage} />\n              <Route path=\"/info\" component={InfoPage} />\n              <Route path=\"/memo-game/:tab\" component={MemoGamePage} />\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}